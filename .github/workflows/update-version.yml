# The version should be updated whenever changes are made to 'main'. To update
# the version, this workflow should
# - checkout the code,
# - update the VERSION file,
# - amend the last commit to include the bumped VERSION file, and
# - tag that commit with the new version.
#
# WARNING: It's very easy to trigger an infinite workflow loop, as this workflow
# pushes to 'main', and it is itself triggered by pushes to 'main'. We avoid
# this situation with careful path filtering.
#
# I should be able to ignore any pushes that change 'VERSION' via the following
# filter:
#   paths:
#     - 'include/**'
#     - 'packaging/**'
#     - 'src/**'
#     - '!VERSION'
# However, there is a known issue with files in the paths filter:
# https://github.com/actions/runner/issues/2324

name: Update version

on:
  push:
    branches:
      - main

env:
  VERSION_FILE: VERSION

jobs:
  update-version:
    name: Update version
    runs-on: ubuntu-latest
    permissions:
      contents: none

    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.UPDATE_VERSION_APP_ID }}
          private-key: ${{ secrets.UPDATE_VERSION_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          token: ${{ steps.app-token.outputs.token }}

      - name: Update version
        run: cmake -P ./cmake/update_version.cmake

      - name: Commit new version
        run: |
          echo "${{ github.event.commits[0].author.name }}"
          git config user.name 'modcam-version-update[bot]'
          git config user.email '199305358+modcam-version-update[bot]@users.noreply.github.com'
          version="$(< $VERSION_FILE)"
          echo "New version: $version"
          git add $VERSION_FILE
          git commit --amend --no-edit
          git tag -a $version -m "$version"
          git push origin main --follow-tags --force
