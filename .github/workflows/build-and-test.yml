# The test workflow should run whenever changes are pushed to a pull request
# branch or to 'main'. For any changes pushed to 'main', this workflow should
# only run after a version update. This workflow should
# - set up the build environment (use a container?),
# - checkout the code,
# - build the code,
# - run linting checks, and
# - run unit tests.
#
# A release should be created on 'main' after tests pass.

name: Continuous integration

on:
  push:
    branches:
      - main
    paths:
      - VERSION
  pull_request:
    paths:
      - "**"
      - "!.github/**"
      - ".github/workflows/build-and-test.yml"
      - "!docs/**"
      - "!.clang-format"
      - "!.gitignore"
      - "!LICENSE"
      - "!README.md"
      - "!VERSION"

env:
  VERSION_FILE: VERSION

jobs:
  build-and-test:
    name: Build and test on ${{ matrix.config.name }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        run: |
          mkdir -p build/package-artifacts
          cp src/test.txt build/

      - name: Package
        id: package
        if: github.ref_name == github.event.repository.default_branch
        run: |
          cp src/test.txt build/package-artifacts/

      - name: Upload package artifacts
        if: steps.package.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: package-test
          path: build/package-artifacts/*.*
          retention-days: 5

  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [build-and-test]
    # if: github.ref_name == github.event.repository.default_branch

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Download package artifacts
      #   uses: actions/download-artifact@v4
      #   with:
      #     path: package-artifacts
      #     merge-multiple: true

      - name: Create release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version="$(< ${{ env.VERSION_FILE }})"
          echo $version
          # gh release create $version ./package-artifacts/*.txt
