# This workflow checks for changes made to the VERSION file. It should block
# changes made by the developer, but it should let changes pass if they were
# merged in from 'main'.
#
# Developers should not touch the VERSION file! It is automatically updated by a
# workflow when a branch is merged into 'main'.

name: Check VERSION file

on: pull_request

env:
  VERSION_FILE: VERSION

jobs:
  check-version:
    name: Check version
    runs-on: ubuntu-latest

    steps:
      - name: Debug
        env:
          branch_base: origin/${{ github.event.pull_request.base.ref }}
          branch_pr: origin/${{ github.event.pull_request.head.ref }}
          refspec_base: +${{ github.event.pull_request.base.sha }}:remotes/origin/${{ github.event.pull_request.base.ref }}
          refspec_pr: +${{ github.event.pull_request.head.sha }}:remotes/origin/${{ github.event.pull_request.head.ref }}
        run: |
          echo ${{ env.branch_base }}
          echo ${{ env.branch_pr }}
          echo ${{ env.refspec_base }}
          echo ${{ env.refspec_pr }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check version
        run: |
          version_changed=$(git diff --quiet $(git merge-base --fork-point origin/main) -- VERSION; echo $?)
          if [ $version_changed -ne 0 ]; then
            echo 'VERSION file has changed! To restore the VERSION file, you need to...'
            echo '  git restore --source=$(git merge-base --fork-point main) -- VERSION'
            echo '  git add VERSION'
            echo '  git commit -m "Restore VERSION"'
          fi
          exit $version_changed
